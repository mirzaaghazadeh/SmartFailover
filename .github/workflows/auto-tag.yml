name: Auto Tag

on:
  push:
    branches:
      - main

permissions:
  contents: write
  issues: write
  pull-requests: write

jobs:
  tag:
    runs-on: ubuntu-latest
    name: Auto Tag Version

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install semantic-release
        run: |
          npm install -g semantic-release
          npm install -g @semantic-release/changelog
          npm install -g @semantic-release/git
          npm install -g @semantic-release/github

      - name: Create .releaserc.json
        run: |
          cat > .releaserc.json << 'EOF'
          {
            "branches": ["main"],
            "plugins": [
              "@semantic-release/commit-analyzer",
              "@semantic-release/release-notes-generator",
              [
                "@semantic-release/changelog",
                {
                  "changelogFile": "CHANGELOG.md"
                }
              ],
              [
                "@semantic-release/git",
                {
                  "assets": ["CHANGELOG.md"],
                  "message": "chore(release): ${nextRelease.version} [skip ci]\n\n${nextRelease.notes}"
                }
              ],
              "@semantic-release/github"
            ]
          }
          EOF

      - name: Run semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Check if semantic-release would create a release
          if semantic-release --dry-run | grep -q "There is no previous release"; then
            echo "No previous release found, proceeding with semantic-release"
            semantic-release
          elif semantic-release --dry-run | grep -q "no release"; then
            echo "No release needed based on commits"
          else
            # Run semantic-release and handle tag conflicts gracefully
            semantic-release || {
              exit_code=$?
              if [ $exit_code -eq 1 ]; then
                echo "Semantic-release completed with warnings or no release needed"
                exit 0
              else
                echo "Semantic-release failed with exit code $exit_code"
                exit $exit_code
              fi
            }
          fi